### YamlMime:ManagedReference
items:
- uid: KeMengUtils.RegexHelper.CommonRegexs
  commentId: T:KeMengUtils.RegexHelper.CommonRegexs
  id: CommonRegexs
  parent: KeMengUtils.RegexHelper
  children:
  - KeMengUtils.RegexHelper.CommonRegexs.AtLeastMNumber(System.Int32)
  - KeMengUtils.RegexHelper.CommonRegexs.OnlyMNumber(System.Int32)
  - KeMengUtils.RegexHelper.CommonRegexs.OnlyNumber
  - KeMengUtils.RegexHelper.CommonRegexs.OnlyNumberBetweenMN(System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: CommonRegexs
  nameWithType: CommonRegexs
  fullName: KeMengUtils.RegexHelper.CommonRegexs
  type: Class
  source:
    id: CommonRegexs
    path: F:\代码\我的项目\KeMengUtils\KeMengUtils\RegexHelper\CommonRegexs.cs
    startLine: 6
  assemblies:
  - KeMengUtils
  namespace: KeMengUtils.RegexHelper
  syntax:
    content: public static class CommonRegexs
    content.vb: Public Module CommonRegexs
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: KeMengUtils.RegexHelper.CommonRegexs.OnlyNumber
  commentId: M:KeMengUtils.RegexHelper.CommonRegexs.OnlyNumber
  id: OnlyNumber
  parent: KeMengUtils.RegexHelper.CommonRegexs
  langs:
  - csharp
  - vb
  name: OnlyNumber()
  nameWithType: CommonRegexs.OnlyNumber()
  fullName: KeMengUtils.RegexHelper.CommonRegexs.OnlyNumber()
  type: Method
  source:
    id: OnlyNumber
    path: F:\代码\我的项目\KeMengUtils\KeMengUtils\RegexHelper\CommonRegexs.cs
    startLine: 12
  assemblies:
  - KeMengUtils
  namespace: KeMengUtils.RegexHelper
  summary: "\n全部都是数字\n"
  example: []
  syntax:
    content: public static Regex OnlyNumber()
    return:
      type: System.Text.RegularExpressions.Regex
      description: ''
    content.vb: Public Shared Function OnlyNumber As Regex
  overload: KeMengUtils.RegexHelper.CommonRegexs.OnlyNumber*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: KeMengUtils.RegexHelper.CommonRegexs.OnlyMNumber(System.Int32)
  commentId: M:KeMengUtils.RegexHelper.CommonRegexs.OnlyMNumber(System.Int32)
  id: OnlyMNumber(System.Int32)
  parent: KeMengUtils.RegexHelper.CommonRegexs
  langs:
  - csharp
  - vb
  name: OnlyMNumber(Int32)
  nameWithType: CommonRegexs.OnlyMNumber(Int32)
  fullName: KeMengUtils.RegexHelper.CommonRegexs.OnlyMNumber(System.Int32)
  type: Method
  source:
    id: OnlyMNumber
    path: F:\代码\我的项目\KeMengUtils\KeMengUtils\RegexHelper\CommonRegexs.cs
    startLine: 22
  assemblies:
  - KeMengUtils
  namespace: KeMengUtils.RegexHelper
  summary: "\n全部都是数字，且字符个数为m\n"
  example: []
  syntax:
    content: public static Regex OnlyMNumber(int m)
    parameters:
    - id: m
      type: System.Int32
      description: 字符个数
    return:
      type: System.Text.RegularExpressions.Regex
      description: ''
    content.vb: Public Shared Function OnlyMNumber(m As Integer) As Regex
  overload: KeMengUtils.RegexHelper.CommonRegexs.OnlyMNumber*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: KeMengUtils.RegexHelper.CommonRegexs.AtLeastMNumber(System.Int32)
  commentId: M:KeMengUtils.RegexHelper.CommonRegexs.AtLeastMNumber(System.Int32)
  id: AtLeastMNumber(System.Int32)
  parent: KeMengUtils.RegexHelper.CommonRegexs
  langs:
  - csharp
  - vb
  name: AtLeastMNumber(Int32)
  nameWithType: CommonRegexs.AtLeastMNumber(Int32)
  fullName: KeMengUtils.RegexHelper.CommonRegexs.AtLeastMNumber(System.Int32)
  type: Method
  source:
    id: AtLeastMNumber
    path: F:\代码\我的项目\KeMengUtils\KeMengUtils\RegexHelper\CommonRegexs.cs
    startLine: 32
  assemblies:
  - KeMengUtils
  namespace: KeMengUtils.RegexHelper
  summary: "\n全部都是数字，且字符个数至少为m\n"
  example: []
  syntax:
    content: public static Regex AtLeastMNumber(int m)
    parameters:
    - id: m
      type: System.Int32
      description: 字符个数
    return:
      type: System.Text.RegularExpressions.Regex
      description: ''
    content.vb: Public Shared Function AtLeastMNumber(m As Integer) As Regex
  overload: KeMengUtils.RegexHelper.CommonRegexs.AtLeastMNumber*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: KeMengUtils.RegexHelper.CommonRegexs.OnlyNumberBetweenMN(System.Int32,System.Int32)
  commentId: M:KeMengUtils.RegexHelper.CommonRegexs.OnlyNumberBetweenMN(System.Int32,System.Int32)
  id: OnlyNumberBetweenMN(System.Int32,System.Int32)
  parent: KeMengUtils.RegexHelper.CommonRegexs
  langs:
  - csharp
  - vb
  name: OnlyNumberBetweenMN(Int32, Int32)
  nameWithType: CommonRegexs.OnlyNumberBetweenMN(Int32, Int32)
  fullName: KeMengUtils.RegexHelper.CommonRegexs.OnlyNumberBetweenMN(System.Int32, System.Int32)
  type: Method
  source:
    id: OnlyNumberBetweenMN
    path: F:\代码\我的项目\KeMengUtils\KeMengUtils\RegexHelper\CommonRegexs.cs
    startLine: 43
  assemblies:
  - KeMengUtils
  namespace: KeMengUtils.RegexHelper
  summary: "\n全部都是数字，且字符个数为m-n\n"
  example: []
  syntax:
    content: public static Regex OnlyNumberBetweenMN(int m, int n)
    parameters:
    - id: m
      type: System.Int32
      description: 最少的字符个数
    - id: n
      type: System.Int32
      description: 最多的字符个数
    return:
      type: System.Text.RegularExpressions.Regex
      description: ''
    content.vb: Public Shared Function OnlyNumberBetweenMN(m As Integer, n As Integer) As Regex
  overload: KeMengUtils.RegexHelper.CommonRegexs.OnlyNumberBetweenMN*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: KeMengUtils.RegexHelper
  commentId: N:KeMengUtils.RegexHelper
  name: KeMengUtils.RegexHelper
  nameWithType: KeMengUtils.RegexHelper
  fullName: KeMengUtils.RegexHelper
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: KeMengUtils.RegexHelper.CommonRegexs.OnlyNumber*
  commentId: Overload:KeMengUtils.RegexHelper.CommonRegexs.OnlyNumber
  name: OnlyNumber
  nameWithType: CommonRegexs.OnlyNumber
  fullName: KeMengUtils.RegexHelper.CommonRegexs.OnlyNumber
- uid: System.Text.RegularExpressions.Regex
  commentId: T:System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: System.Text.RegularExpressions
  commentId: N:System.Text.RegularExpressions
  isExternal: true
  name: System.Text.RegularExpressions
  nameWithType: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
- uid: KeMengUtils.RegexHelper.CommonRegexs.OnlyMNumber*
  commentId: Overload:KeMengUtils.RegexHelper.CommonRegexs.OnlyMNumber
  name: OnlyMNumber
  nameWithType: CommonRegexs.OnlyMNumber
  fullName: KeMengUtils.RegexHelper.CommonRegexs.OnlyMNumber
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: KeMengUtils.RegexHelper.CommonRegexs.AtLeastMNumber*
  commentId: Overload:KeMengUtils.RegexHelper.CommonRegexs.AtLeastMNumber
  name: AtLeastMNumber
  nameWithType: CommonRegexs.AtLeastMNumber
  fullName: KeMengUtils.RegexHelper.CommonRegexs.AtLeastMNumber
- uid: KeMengUtils.RegexHelper.CommonRegexs.OnlyNumberBetweenMN*
  commentId: Overload:KeMengUtils.RegexHelper.CommonRegexs.OnlyNumberBetweenMN
  name: OnlyNumberBetweenMN
  nameWithType: CommonRegexs.OnlyNumberBetweenMN
  fullName: KeMengUtils.RegexHelper.CommonRegexs.OnlyNumberBetweenMN
