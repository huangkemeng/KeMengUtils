{
  "homepages": [],
  "source_base_path": "F:/代码/我的项目/KeMengUtils/KeMengUtilsDoc",
  "xrefmap": "xrefmap.yml",
  "files": [
    {
      "type": "ManagedReference",
      "source_relative_path": "api/KeMengUtils.DataHelper.BasicDataExtends.yml",
      "output": {
        ".html": {
          "relative_path": "api/KeMengUtils.DataHelper.BasicDataExtends.html",
          "hash": "5HC1k7k/Y5C5d6Z0hEnbfA=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/KeMengUtils.DataHelper.DTHelper.yml",
      "output": {
        ".html": {
          "relative_path": "api/KeMengUtils.DataHelper.DTHelper.html",
          "hash": "aC5HGN5MkRx/GPUFNIWprA=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/KeMengUtils.DataHelper.DateTimeHelper.yml",
      "output": {
        ".html": {
          "relative_path": "api/KeMengUtils.DataHelper.DateTimeHelper.html",
          "hash": "TRSlBcZIT9v3DqprE3c+Vw=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/KeMengUtils.DataHelper.FilesHelper.yml",
      "output": {
        ".html": {
          "relative_path": "api/KeMengUtils.DataHelper.FilesHelper.html",
          "hash": "Xl0lX8GQxVPBkxtn0gwhAQ=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/KeMengUtils.DataHelper.LinqConvert.yml",
      "output": {
        ".html": {
          "relative_path": "api/KeMengUtils.DataHelper.LinqConvert.html",
          "hash": "EuJXE44b4y0MgSVDokvY0w=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/KeMengUtils.DataHelper.SortData.yml",
      "output": {
        ".html": {
          "relative_path": "api/KeMengUtils.DataHelper.SortData.html",
          "hash": "dmu2OT2Ia07yUnsMQ62Nog=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/KeMengUtils.DataHelper.yml",
      "output": {
        ".html": {
          "relative_path": "api/KeMengUtils.DataHelper.html",
          "hash": "F+EwXXxrcPWhsxuggQorFg=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/KeMengUtils.LocationHelper.LocationService.yml",
      "output": {
        ".html": {
          "relative_path": "api/KeMengUtils.LocationHelper.LocationService.html",
          "hash": "poGDfH7JZikT4Ik6Cttk7g=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/KeMengUtils.LocationHelper.Models.LocationInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/KeMengUtils.LocationHelper.Models.LocationInfo.html",
          "hash": "sI7CNM9AAF27PZFK5LNPCg=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/KeMengUtils.LocationHelper.Models.QQMapParams.yml",
      "output": {
        ".html": {
          "relative_path": "api/KeMengUtils.LocationHelper.Models.QQMapParams.html",
          "hash": "zTYRiCZ0mkjj9bdZVnxlqg=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/KeMengUtils.LocationHelper.Models.yml",
      "output": {
        ".html": {
          "relative_path": "api/KeMengUtils.LocationHelper.Models.html",
          "hash": "Y2hk+7+5zFgCJ20i+EzIqQ=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/KeMengUtils.LocationHelper.yml",
      "output": {
        ".html": {
          "relative_path": "api/KeMengUtils.LocationHelper.html",
          "hash": "6xTY9TTW7AHoR8spy/p1jw=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/KeMengUtils.RegexHelper.CommonRegexs.yml",
      "output": {
        ".html": {
          "relative_path": "api/KeMengUtils.RegexHelper.CommonRegexs.html",
          "hash": "qy59JvKt5dcggE5AZhgpKA=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/KeMengUtils.RegexHelper.yml",
      "output": {
        ".html": {
          "relative_path": "api/KeMengUtils.RegexHelper.html",
          "hash": "8N4IIFVO6Wt+6nFfYE+1HA=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "api/index.md",
      "output": {
        ".html": {
          "relative_path": "api/index.html",
          "hash": "IWSb6B/6lGYRPQ4WhMFrGQ=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "api/toc.yml",
      "output": {
        ".html": {
          "relative_path": "api/toc.html",
          "hash": "5JbruQOWFgNoDuB2gXndtA=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/intro.md",
      "output": {
        ".html": {
          "relative_path": "articles/intro.html",
          "hash": "2kd9qJreYOgyX+B0zOzxgQ=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "articles/toc.yml",
      "output": {
        ".html": {
          "relative_path": "articles/toc.html",
          "hash": "t7iiFrmuYmrKWisdq+lN6Q=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "index.md",
      "output": {
        ".html": {
          "relative_path": "index.html",
          "hash": "nGMmOdiPg3X/9UUnkDXV4A=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "toc.yml",
      "output": {
        ".html": {
          "relative_path": "toc.html",
          "hash": "K4fHPx2reXuiKmSmzC3eeg=="
        }
      },
      "is_incremental": false,
      "version": ""
    }
  ],
  "incremental_info": [
    {
      "status": {
        "can_incremental": false,
        "details": "Disable incremental build by force rebuild option.",
        "incrementalPhase": "build",
        "total_file_count": 0,
        "skipped_file_count": 0,
        "full_build_reason_code": "ForceRebuild"
      },
      "processors": {
        "TocDocumentProcessor": {
          "can_incremental": false,
          "details": "Processor TocDocumentProcessor cannot support incremental build because the processor doesn't implement ISupportIncrementalDocumentProcessor interface.",
          "incrementalPhase": "build",
          "total_file_count": 0,
          "skipped_file_count": 0
        },
        "ManagedReferenceDocumentProcessor": {
          "can_incremental": false,
          "incrementalPhase": "build",
          "total_file_count": 14,
          "skipped_file_count": 0
        },
        "ConceptualDocumentProcessor": {
          "can_incremental": false,
          "incrementalPhase": "build",
          "total_file_count": 3,
          "skipped_file_count": 0
        }
      }
    },
    {
      "status": {
        "can_incremental": false,
        "details": "Cannot support incremental post processing, the reason is: it's disabled.",
        "incrementalPhase": "postProcessing",
        "total_file_count": 0,
        "skipped_file_count": 0
      },
      "processors": {}
    }
  ],
  "version_info": {},
  "groups": [
    {
      "xrefmap": "xrefmap.yml"
    }
  ]
}